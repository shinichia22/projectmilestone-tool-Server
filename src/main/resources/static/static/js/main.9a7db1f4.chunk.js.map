{"version":3,"sources":["actions/types.js","actions/ProjectAction.js","components/Project/ProjectItem.js","components/Project/CreateProjectButton.js","components/Dashboard.js","SecurityUtils/setJwtToken.js","actions/SecurityAction.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/BacklogAction.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","SecurityUtils/SecureRoutes.js","App.js","reportWebVitals.js","index.js"],"names":["GET_ERRORS","GET_PROJECTS","GET_PROJECT","DELETE_PROJECT","GET_BACKLOG","GET_PROJECT_TASK","DELETE_PROJECT_TASK","SET_CURRENT_USER","createProject","project","history","dispatch","a","axios","post","push","type","payload","response","data","ProjectItem","onDeleteClick","id","props","deleteProject","this","className","projectIdentifier","projectName","description","to","onClick","bind","Component","connect","window","confirm","delete","CreateProjectButton","Fragment","Dashboard","getProjects","projects","map","state","get","res","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","headerLinks","security","validToken","user","userIsAuthenticated","fullName","userIsNotAuthenticated","AddProject","onChange","e","setState","target","name","value","onSubmit","preventDefault","newProject","start_date","start","end_date","errors","nextProps","classnames","placeholder","initialState","project_tasks","project_task","booleanActionPayload","combineReducers","action","filter","backlog","projectSequence","initalState","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","match","params","getProject","updateProject","disabled","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","Backlog","tasks","project_tasks_prop","todoItems","inProgressItems","doneItems","i","length","status","ProjectBoard","getBacklog","BoardContent","projectNotFound","role","boardAlgorithm","AddProjectTask","newtask","dueDate","addProjectTask","UpdateProjectTask","create_At","getProjectTask","updateProjectTask","patch","Landing","Register","newUser","username","password","confirmPassword","console","log","createNewUser","Login","LoginRequest","login","Loginrequest","rest","setItem","decoded","jwt_decode","component","otherProps","render","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9a7db1f4.chunk.js","sourcesContent":["export const GET_ERRORS = \"GET_ERRORS\";\nexport const GET_PROJECTS = \"GET_PROJECTS\";\nexport const GET_PROJECT = \"GET_PROJECT\";\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\n\n//Types for Backlog\nexport const GET_BACKLOG = \"Get_BACKLOG\";\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\n\n","import axios from \"axios\";\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\n\nexport const createProject = (project, history) => async dispatch => {\n  try {\n    await axios.post(\"/api/project\", project);\n    history.push(\"/dashboard\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getProjects = () => async dispatch => {\n  const res = await axios.get(\"/api/project/all\");\n  dispatch({\n    type: GET_PROJECTS,\n    payload: res.data\n  });\n};\n\nexport const getProject = (id, history) => async dispatch => {\n  try {\n    const res = await axios.get(`/api/project/${id}`);\n    dispatch({\n      type: GET_PROJECT,\n      payload: res.data\n    });\n  } catch (error) {\n    history.push(\"/dashboard\");\n  }\n};\n\nexport const deleteProject = id => async dispatch => {\n  if (\n    window.confirm(\n      \"Are you sure? This will delete the project and all the data related to it\"\n    )\n  ) {\n    await axios.delete(`/api/project/${id}`);\n    dispatch({\n      type: DELETE_PROJECT,\n      payload: id\n    });\n  }\n};","import React, { Component } from 'react';\nimport {Link} from \"react-router-dom\"\nimport PropTypes from 'prop-types';\nimport {connect} from \"react-redux\";\nimport {deleteProject} from \"../../actions/ProjectAction\"\n\nclass ProjectItem extends Component {   \n    \n    onDeleteClick = (id) =>{\n        this.props.deleteProject(id);\n    }\n\n\n    render() {\n        const {project} = this.props;\n        return (\n        <div className=\"container\">\n            <div className=\"card card-body bg-light mb-3\">\n                <div className=\"row\">\n                    <div className=\"col-2\">\n                        <span className=\"mx-auto\">{project.projectIdentifier}</span>\n                    </div>\n                    <div className=\"col-lg-6 col-md-4 col-8\">\n                        <h3>{project.projectName}</h3>\n                        <p>{project.description}</p>\n                    </div>\n                    <div className=\"col-md-4 d-none d-lg-block\">\n                        <ul className=\"list-group\">\n                            <Link to={`/projectBoard/${project.projectIdentifier}`}>\n                                <li className=\"list-group-item board\">\n                                    <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\n                                </li>\n                            </Link>\n                            <Link to={`/updateProject/${project.projectIdentifier}`}>\n                            <li className=\"list-group-item update\">\n                                    <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\n                                </li>\n                            </Link>\n                            \n                                <li className=\"list-group-item delete\" onClick={this.onDeleteClick.bind(this, project.projectIdentifier)}>\n                                    <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\n                                </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </div>\n        );\n    }\n}\n\nProjectItem.propTypes = {\n    deleteProject: PropTypes.func.isRequired\n}\n\nexport default connect(null,{deleteProject}) (ProjectItem);","import React from 'react'\nimport { Link } from 'react-router-dom'\nconst CreateProjectButton =()=> {\n    return (\n        <React.Fragment>\n            <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\n            Create a Project\n            </Link>   \n        </React.Fragment>\n    )\n}\n\nexport default CreateProjectButton\n","import React, { Component } from 'react';\nimport ProjectItem from '../components/Project/ProjectItem'\nimport CreateProjectButton from '../components/Project/CreateProjectButton'\nimport {connect} from 'react-redux';\nimport {getProjects} from '../actions/ProjectAction'\nimport PropTypes from \"prop-types\";\n\nclass Dashboard extends Component {\n\n    componentDidMount() {\n        this.props.getProjects();\n    }\n\n    render() {\n        const projects = this.props.project.projects\n        return (\n            <div className=\"projects\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <h1 className=\"display-4 text-center\">Projects</h1>\n                        <br />\n                        <CreateProjectButton/>\n                        <br />\n                        <hr />\n                        {projects.map(project => (\n                            <ProjectItem key={project.id} project={project}/>\n                        ))}\n                        \n                    </div>\n                </div>\n            </div>\n        </div>\n    \n        );\n    }\n}\n\nDashboard.propTypes = {\n    project: PropTypes.object.isRequired,\n    getProjects: PropTypes.func.isRequired\n  };\n\n// this project key id is from the index.js combineReducers\nconst mapStateToProps = state => ({\n    project: state.project\n})\n\nexport default connect(mapStateToProps, {getProjects}) (Dashboard);","import axios from \"axios\";\n\nconst setJWTToken = (token) =>{\n    if(token){\n        axios.defaults.headers.common[\"Authorization\"] =token;\n    }else{\n        delete axios.defaults.headers.common[\"Authorization\"];\n    }\n}\n\nexport default setJWTToken;","import axios from \"axios\";\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\nimport setJWTToken from \"../SecurityUtils/setJwtToken\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const createNewUser = (newUser, history) => async dispatch => {\n    try{\n        await axios.post(\"/api/users/register\", newUser);\n        history.push(\"/login\");\n        dispatch({\n            type: GET_ERRORS,\n            payload: {}\n        })\n    }catch(error){\n        dispatch({\n            type: GET_ERRORS,\n            payload: error.response.data,\n        })\n    }\n};\n\nexport const login = Loginrequest => async dispatch => {\n    // post => login request\n\n    try {\n        const rest = await axios.post(\"api/users/login\", Loginrequest);\n        //extract the token from the rest.data\n        const {token} = rest.data;\n\n        //store the token in localstorage\n        localStorage.setItem(\"jwtToken\", token);\n        //set our token in the header **********\n        setJWTToken(token);\n        //decode the token in react to get the user details\n        const decoded = jwt_decode(token)\n        //dispatch to our security reducer\n        dispatch({\n            type: SET_CURRENT_USER,\n            payload: decoded\n        })\n\n    }catch(err){\n        dispatch({\n            type:GET_ERRORS,\n            payload:err.response.data\n        })\n    }\n}\n\nexport const logout = () => dispatch => {\n    localStorage.removeItem(\"jwtToken\") // remove token from localstorage\n    setJWTToken(false) // to remove the token from header \n    dispatch({\n        type: SET_CURRENT_USER,\n        payload: {}\n    })\n}","import React, { Component } from 'react';\nimport {Link} from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../actions/SecurityAction\";\n\nclass Header extends Component {\n  logout() {\n    this.props.logout();\n    window.location.href = \"/\";\n  }\n  render() {\n    const { validToken, user } = this.props.security;\n\n    const userIsAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/dashboard\">\n              Dashboard\n            </Link>\n          </li>\n        </ul>\n\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/dashboard\">\n              <i className=\"fas fa-user-circle mr-1\" />\n              {user.fullName}\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link\n              className=\"nav-link\"\n              to=\"/logout\"\n              onClick={this.logout.bind(this)}\n            >\n              Logout\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    const userIsNotAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/register\">\n              Sign Up\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/login\">\n              Login\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    let headerLinks;\n\n    if (validToken && user) {\n      headerLinks = userIsAuthenticated;\n    } else {\n      headerLinks = userIsNotAuthenticated;\n    }\n\n    return (\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\n        <div className=\"container\">\n          <Link className=\"navbar-brand\" to=\"/\">\n            Personal Project Management Tool\n          </Link>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#mobile-nav\"\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          {headerLinks}\n        </div>\n      </nav>\n    );\n  }\n}\n\nHeader.propTypes = {\n  logout: PropTypes.func.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security\n});\n\nexport default connect(\n  mapStateToProps,\n  { logout }\n)(Header);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport {createProject} from '../../actions/ProjectAction'\nimport classnames from \"classnames\";\n\nexport class AddProject extends Component {\n\n    constructor(){\n        super();\n\n        this.state={\n\n        projectName: \"\",\n        projectIdentifier: \"\",\n        description: \"\",\n        start_date: \"\",\n        end_date: \"\",\n        errors: {}\n    }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n          this.setState({ errors: nextProps.errors });\n        }\n      }\n\n    onChange=(e)=>{\n        this.setState({[e.target.name]: e.target.value })\n    }\n\n    onSubmit = (e)=>{\n        e.preventDefault();\n        const newProject={\n        projectName:this.state.projectName,\n        projectIdentifier: this.state.projectIdentifier,\n        description: this.state.description,\n        start_date: this.state.start,\n        end_date: this.state.end_date\n        }\n        this.props.createProject(newProject, this.props.history)\n    }\n\n    render() {\n        const { errors } = this.state;\n        return (\n            <div className=\"project\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8 m-auto\">\n                            <h5 className=\"display-4 text-center\">Create / Edit Project form</h5>\n                            <hr />\n                            <form onSubmit={this.onSubmit}>\n                                <div className=\"form-group\">\n                                    <input type=\"text\" \n                                    className={classnames(\"form-control form-control-lg\",{\"is-invalid\":errors.projectName})} \n                                    placeholder=\"Project Name\" \n                                    name=\"projectName\"\n                                    value={this.state.projectName}\n                                    onChange={this.onChange}/>\n                                    {errors.projectName && (\n                                        <div className=\"invalid-feedback\">{errors.projectName}</div>\n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <input type=\"text\" \n                                    className={classnames(\"form-control form-control-lg\", {\"is-invalid\":errors.projectIdentifier})} \n                                    placeholder=\"Unique Project ID\"\n                                    name=\"projectIdentifier\"\n                                    value={this.state.projectIdentifier}\n                                    onChange={this.onChange}/>\n                                    {errors.projectIdentifier && (\n                                        <div className=\"invalid-feedback\">{errors.projectIdentifier}</div>\n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <textarea \n                                    className={classnames(\"form-control form-control-lg\",{\"is-invalid\":errors.description})} \n                                    placeholder=\"Project Description\"\n                                    name=\"description\" \n                                    value={this.state.description}\n                                    onChange={this.onChange}\n                                    ></textarea>\n                                    {errors.description && (\n                                        <div className=\"invalid-feedback\">{errors.description}</div>\n                                    )}\n                                </div>\n                                <h6>Start Date</h6>\n                                <div className=\"form-group\">\n                                    <input type=\"date\" className=\"form-control form-control-lg\"\n                                    name=\"start_date\"\n                                    value={this.state.start_date}\n                                    onChange={this.onChange}/>\n                                </div>\n                                <h6>Estimated End Date</h6>\n                                <div className=\"form-group\">\n                                    <input type=\"date\" className=\"form-control form-control-lg\"\n                                    name=\"end_date\"\n                                    value={this.state.end_date}\n                                    onChange={this.onChange}/>\n                                </div>\n        \n                                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\n                            </form>\n                        </div>\n                    </div>\n                </div>\n             </div>    \n        )\n    }\n}\n\nAddProject.propTypes ={\n    createProject: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    errors: state.errors\n  });\n\nexport default connect (mapStateToProps, {createProject}) (AddProject);\n","import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState= {};\n\nexport default function(state= initialState, action) {\n\n    switch (action.type){\n        case GET_ERRORS:\n            return action.payload\n        default:\n            return state;\n    }\n}\n\n","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\n\nconst initialState ={\n    projects:[],\n    project:{}\n};\n\nexport default function(state= initialState, action) {\n\n    switch (action.type){\n        case GET_PROJECTS:\n            return {...state, \n                projects: action.payload}\n\n        case GET_PROJECT:\n            return {...state, project:action.payload}\n\n        case DELETE_PROJECT:\n            return {...state,\n            projects:state.projects.filter(project => project.projectIdentifier !==action.payload)\n        }\n        default:\n            return state;\n    }\n}","import {GET_BACKLOG, GET_PROJECT_TASK, DELETE_PROJECT_TASK} from \"../actions/types\"\n\nconst initialState = {\n    project_tasks:[],\n    project_task:{}\n}\n\nexport default function(state=initialState, action){\n    switch(action.type){\n\n        case GET_BACKLOG:\n            return {\n                ...state, project_tasks: action.payload\n            }\n        case GET_PROJECT_TASK:\n            return {\n                ...state, project_task: action.payload\n            }\n        case DELETE_PROJECT_TASK:\n            return {\n                ...state, \n                project_tasks: state.project_tasks.filter(project_task => project_task.projectSequence !== action.payload)\n            }\n\n        default:\n            return state;\n    }\n}","import { SET_CURRENT_USER } from \"../actions/types\";\n\nconst initialState = {\n    user: {},\n    validToken:false\n}\n\nconst booleanActionPayload = (payload) => {\n    if(payload){\n        return true;\n    }else {return false;}\n}\n\nexport default function(state= initialState, action){\n    switch(action.type){\n        case SET_CURRENT_USER:\n        return {\n            ...state, \n            validToken:booleanActionPayload(action.payload),\n            user: action.payload\n        }\n        default:\n            return state;\n    }\n}","import { combineReducers } from \"redux\";\nimport errorReducer from \"./errorReducer\";\nimport projectReducer from \"./projectReducer\";\nimport backlogReducer from \"./backlogReducer\";\nimport securityReducer from \"./securityReducer\";\n\nexport default combineReducers({\n    errors:errorReducer,\n    project: projectReducer,\n    backlog: backlogReducer,\n    security: securityReducer\n\n})","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initalState = {};\nconst middleware = [thunk];\n\nlet store;\n\nconst ReactReduxDevTools =\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\n  store = createStore(\n    rootReducer,\n    initalState,\n    compose(\n      applyMiddleware(...middleware),\n      ReactReduxDevTools\n    )\n  );\n} else {\n  store = createStore(\n    rootReducer,\n    initalState,\n    compose(applyMiddleware(...middleware))\n  );\n}\n\nexport default store;","import React, { Component } from 'react'\nimport {getProject, createProject} from '../../actions/ProjectAction'\nimport PropTypes from \"prop-types\"\nimport {connect} from 'react-redux'\nimport classnames from \"classnames\"\nclass UpdateProject extends Component {\n    //set state\n    constructor() {\n      super();\n  \n      this.state = {\n        id: \"\",\n        projectName: \"\",\n        projectIdentifier: \"\",\n        description: \"\",\n        start_date: \"\",\n        end_date: \"\",\n        errors: {}\n      };\n      this.onChange = this.onChange.bind(this);\n      this.onSubmit = this.onSubmit.bind(this);\n    }\n  \n    componentWillReceiveProps(nextProps) {\n      if (nextProps.errors) {\n        this.setState({ errors: nextProps.errors });\n      }\n      const {\n        id,\n        projectName,\n        projectIdentifier,\n        description,\n        start_date,\n        end_date\n      } = nextProps.project;\n  \n      this.setState({\n        id,\n        projectName,\n        projectIdentifier,\n        description,\n        start_date,\n        end_date\n      });\n    }\n  \n    componentDidMount() {\n      const { id } = this.props.match.params;\n      this.props.getProject(id, this.props.history);\n    }\n  \n    onChange(e) {\n      this.setState({ [e.target.name]: e.target.value });\n    }\n  \n    onSubmit(e) {\n      e.preventDefault();\n  \n      const updateProject = {\n        id: this.state.id,\n        projectName: this.state.projectName,\n        projectIdentifier: this.state.projectIdentifier,\n        description: this.state.description,\n        start_date: this.state.start_date,\n        end_date: this.state.end_date\n      };\n  \n      this.props.createProject(updateProject, this.props.history);\n    }\n  \n    render() {\n      const { errors } = this.state;\n      return (\n        <div className=\"project\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-8 m-auto\">\n                <h5 className=\"display-4 text-center\">Update Project form</h5>\n                <hr />\n                <form onSubmit={this.onSubmit}>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.projectName\n                      })}\n                      placeholder=\"Project Name\"\n                      name=\"projectName\"\n                      value={this.state.projectName}\n                      onChange={this.onChange}\n                    />\n                    {errors.projectName && (\n                      <div className=\"invalid-feedback\">{errors.projectName}</div>\n                    )}\n                  </div>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className=\"form-control form-control-lg\"\n                      placeholder=\"Unique Project ID\"\n                      name=\"projectIdentifier\"\n                      value={this.state.projectIdentifier}\n                      onChange={this.onChange}\n                      disabled\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <textarea\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.description\n                      })}\n                      placeholder=\"Project Description\"\n                      name=\"description\"\n                      onChange={this.onChange}\n                      value={this.state.description}\n                    />\n                    {errors.description && (\n                      <div className=\"invalid-feedback\">{errors.description}</div>\n                    )}\n                  </div>\n                  <h6>Start Date</h6>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"date\"\n                      className=\"form-control form-control-lg\"\n                      name=\"start_date\"\n                      value={this.state.start_date}\n                      onChange={this.onChange}\n                    />\n                  </div>\n                  <h6>Estimated End Date</h6>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"date\"\n                      className=\"form-control form-control-lg\"\n                      name=\"end_date\"\n                      value={this.state.end_date}\n                      onChange={this.onChange}\n                    />\n                  </div>\n  \n                  <input\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block mt-4\"\n                  />\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n  \n  UpdateProject.propTypes = {\n    getProject: PropTypes.func.isRequired,\n    createProject: PropTypes.func.isRequired,\n    project: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n  };\n  \n  const mapStateToProps = state => ({\n    project: state.project.project,\n    errors: state.errors\n  });\n  \n  export default connect(\n    mapStateToProps,\n    { getProject, createProject }\n  )(UpdateProject);  ","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { deleteProjectTask } from \"../../../actions/BacklogAction\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass ProjectTask extends Component {\n  onDeleteClick(backlog_id, pt_id) {\n    this.props.deleteProjectTask(backlog_id, pt_id);\n  }\n  render() {\n    const { project_task } = this.props;\n    let priorityString;\n    let priorityClass;\n\n    if (project_task.priority === 1) {\n      priorityClass = \"bg-danger text-light\";\n      priorityString = \"HIGH\";\n    }\n\n    if (project_task.priority === 2) {\n      priorityClass = \"bg-warning text-light\";\n      priorityString = \"MEDIUM\";\n    }\n\n    if (project_task.priority === 3) {\n      priorityClass = \"bg-info text-light\";\n      priorityString = \"LOW\";\n    }\n\n    return (\n      <div className=\"card mb-1 bg-light\">\n        <div className={`card-header text-primary ${priorityClass}`}>\n          ID: {project_task.projectSequence} -- Priority: {priorityString}\n        </div>\n        <div className=\"card-body bg-light\">\n          <h5 className=\"card-title\">{project_task.summary}</h5>\n          <p className=\"card-text text-truncate \">\n            {project_task.acceptanceCriteria}\n          </p>\n          <Link\n            to={`/updateProjectTask/${project_task.projectIdentifier}/${\n              project_task.projectSequence\n            }`}\n            className=\"btn btn-primary\"\n          >\n            View / Update\n          </Link>\n\n          <button\n            className=\"btn btn-danger ml-4\"\n            onClick={this.onDeleteClick.bind(\n              this,\n              project_task.projectIdentifier,\n              project_task.projectSequence\n            )}\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nProjectTask.propTypes = {\n  deleteProjectTask: PropTypes.func.isRequired\n};\nexport default connect(\n  null,\n  { deleteProjectTask }\n)(ProjectTask);","import axios from 'axios';\nimport {GET_ERRORS, GET_BACKLOG, GET_PROJECT_TASK, DELETE_PROJECT_TASK} from \"./types\"\n\nexport const addProjectTask = (backlog_id, project_task, history) => async dispatch =>{\n    try {\n    await axios.post(`/api/backlog/${backlog_id}`, project_task);\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({\n        type: GET_ERRORS,\n        payload:{}   // we get error message whenjust clicking update to remove it weremove error obj when saved \n      })\n    } catch (error) {\n        dispatch({\n            type: GET_ERRORS,\n            payload:error.response.data  \n          })\n    }\n    \n};\n\n\nexport const getBacklog = backlog_id => async dispatch => {\n  try {\n    const res = await axios.get(`/api/backlog/${backlog_id}`);\n    dispatch({\n      type: GET_BACKLOG,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload:err.response.data  \n    })\n  }\n};\n\nexport const getProjectTask = (backlog_id,pt_id,history) => async dispatch => {\n  try {\n    const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`)\n    dispatch({\n      type: GET_PROJECT_TASK,\n      payload: res.data\n    })\n  } catch (error) {\n    history.push(\"/dashboard\")\n  }\n}\n\nexport const updateProjectTask = (backlog_id,pt_id,project_task,history) => async dispatch => {\n\n  try {\n    await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`,project_task)\n    history.push(`/projectBoard/${backlog_id}`)\n    dispatch({\n      type: GET_ERRORS,\n      payload:{} // when updating if there is error and goes back and click again we see the same error \n    })\n    } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload:error.response.data\n    })\n  }\n}\n\n\nexport const deleteProjectTask = (backlog_id, pt_id) => async dispatch => {\n  if (\n    window.confirm(\n      `You are deleting project task ${pt_id}, this action cannot be undone`\n    )\n  ) {\n    await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\n    dispatch({\n      type: DELETE_PROJECT_TASK,\n      payload: pt_id\n    });\n  }\n};","import React, { Component } from 'react';\nimport ProjectTask from \"../ProjectBoard/ProjectTasks/ProjectTask\"\n\nclass Backlog extends Component {\n    render() {\n      const {project_tasks_prop} = this.props;\n      const tasks = project_tasks_prop.map(project_task => (\n        <ProjectTask key ={project_task.id} project_task={project_task}/>\n      ))\n\n      let todoItems=[];\n      let inProgressItems=[];\n      let doneItems=[];\n\n      for(let i=0; i<tasks.length; i++) {\n\n        if(tasks[i].props.project_task.status === \"TO_DO\"){\n          todoItems.push(tasks[i]);\n        }else if(tasks[i].props.project_task.status === \"IN_PROGRESS\"){\n          inProgressItems.push(tasks[i]);\n        }else {\n          doneItems.push(tasks[i]);\n        }\n      }\n\n\n        return (\n              <div className=\"container\">\n                <div className=\"row\">\n                  <div className=\"col-md-4\">\n                    <div className=\"card text-center mb-2\">\n                      <div className=\"card-header bg-secondary text-white\">\n                        <h3>TO DO</h3>\n                      </div>\n                    </div>\n                    {todoItems}\n                    {\n                      //inset the project task items\n                    }\n                  </div>\n                  <div className=\"col-md-4\">\n                    <div className=\"card text-center mb-2\">\n                      <div className=\"card-header bg-primary text-white\">\n                        <h3>In Progress</h3>\n                      </div>\n                    </div>\n                    {\n                      inProgressItems\n                    }\n                    {\n                      // //<!-- SAMPLE PROJECT TASK STARTS HERE -->\n                      // <!-- SAMPLE PROJECT TASK ENDS HERE -->\n                    }\n                  </div>\n                  <div className=\"col-md-4\">\n                    <div className=\"card text-center mb-2\">\n                      <div className=\"card-header bg-success text-white\">\n                        <h3>Done</h3>\n                      </div>\n                    </div>\n                    {\n                      doneItems\n                    }\n                    {\n                      //<!-- SAMPLE PROJECT TASK STARTS HERE -->\n                    }\n      \n                    {\n                      //<!-- SAMPLE PROJECT TASK ENDS HERE -->\n                    }\n                  </div>\n                </div>\n              </div>\n        );\n    }\n}\n\nexport default Backlog;","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Backlog from \"./Backlog\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getBacklog } from \"../../actions/BacklogAction\";\n\nclass ProjectBoard extends Component {\n  //constructor to handle errors\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n       errors:{}\n    }\n  }\n  \n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getBacklog(id);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if(nextProps.errors){\n      this.setState({ errors: nextProps.errors})\n    }\n  }\n\n  render() {\n\n    const { id } = this.props.match.params;\n    const {project_tasks} = this.props.backlog;\n    const {errors} = this.state;\n\n    let BoardContent \n\n    const boardAlgorithm = (errors,project_tasks) => {\n\n      if(project_tasks.length<1){\n       // when the project identifier is invalid\n        if(errors.projectNotFound){\n          return(\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n          {errors.projectNotFound}\n          </div>\n          )\n        }else if(errors.projectIdentifier){\n          return(\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n          {errors.projectIdentifier}\n          </div>\n          )\n        }\n        else{\n          // when the projectidentifier is valid but no task created yet\n          return (<div className=\"alert alert-info text-center\" role=\"alert\">\n          No Project tasks on this board</div>)\n        }\n      }else {\n       return (<Backlog project_tasks_prop = {project_tasks} />)\n      }\n    };\n\n\n    BoardContent = boardAlgorithm(errors,project_tasks);\n\n\n\n    return (\n      <div className=\"container\">\n        <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\n          <i className=\"fas fa-plus-circle\"> Create Project Task</i>\n        </Link>\n        <br />\n        <hr />\n        {\n          BoardContent\n        }\n      </div>\n    );\n  }\n}\n\nProjectBoard.propTypes = {\n  backlog: PropTypes.object.isRequired,\n  getBacklog: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\n// all state define in reducer will get in state parameter\nconst mapStateToProps = state => ({\n  backlog: state.backlog,\n  errors: state.errors,\n});\n\nexport default connect(\n  mapStateToProps,\n  { getBacklog }\n)(ProjectBoard);","import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport classnames from 'classnames';\nimport {addProjectTask} from '../../../actions/BacklogAction'\nimport PropTypes from 'prop-types';\n\nclass AddProjectTask extends Component {\n    \n    constructor(props) {\n        super(props)\n        \n        const {id} = this.props.match.params;\n\n        this.state = {\n        \"summary\": \"\",\n        \"projectSequence\": \"\",\n        \"acceptanceCriteria\":\"\",\n        \"status\": \"\",\n        \"priority\":\"0\",\n        \"dueDate\": \"\",\n        \"projectIdentifier\":id,\n        \"errors\":{}\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if(nextProps.errors){\n            this.setState({ errors: nextProps.errors})\n        }\n    }\n    \n    onChange = (e) => {\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault()\n        const newtask = {\n        \"summary\": this.state.summary,\n        \"projectSequence\": this.state.projectSequence,\n        \"acceptanceCriteria\":this.state.acceptanceCriteria,\n        \"status\": this.state.status,\n        \"priority\":this.state.priority,\n        \"dueDate\": this.state.dueDate,\n        };\n        this.props.addProjectTask(this.state.projectIdentifier, newtask, this.props.history);\n\n    }\n\n\n    render() {\n        const {id} = this.props.match.params\n        const {errors} = this.state;\n        return (\n            <div className=\"add-PBI\">\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-md-8 m-auto\">\n                    <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\n                        Back to Project Board\n                    </Link>\n                    <h4 className=\"display-4 text-center\">Add Project Task</h4>\n                    <p className=\"lead text-center\">Project Name + Project Code</p>\n                    <form onSubmit ={this.onSubmit}>\n                        <div className=\"form-group\">\n                        <input\n                        type=\"text\"\n                        className={classnames(\"form-control form-control-lg\", {\n                          \"is-invalid\": errors.summary\n                        })}\n                        name=\"summary\"\n                        placeholder=\"Project Task summary\"\n                        value={this.state.summary}\n                        onChange={this.onChange}\n                      />\n                      {errors.summary && (\n                        <div className=\"invalid-feedback\">{errors.summary}</div>\n                      )}\n                        </div>\n                        <div className=\"form-group\">\n                            <textarea className=\"form-control form-control-lg\" placeholder=\"Acceptance Criteria\" name=\"acceptanceCriteria\"\n                            value={this.state.acceptanceCriteria}\n                            onChange ={this.onChange}/>\n                        </div>\n                        <h6>Due Date</h6>\n                        <div className=\"form-group\">\n                            <input type=\"date\" className=\"form-control form-control-lg\" name=\"dueDate\"\n                            value={this.state.dueDate}\n                            onChange ={this.onChange} />\n                        </div>\n                        <div className=\"form-group\">\n                            <select className=\"form-control form-control-lg\" name=\"priority\"\n                            value={this.state.priority}\n                            onChange ={this.onChange}>\n                                <option value={0}>Select Priority</option>\n                                <option value={1}>High</option>\n                                <option value={2}>Medium</option>\n                                <option value={3}>Low</option>\n                            </select>\n                        </div>\n\n                        <div className=\"form-group\">\n                            <select className=\"form-control form-control-lg\" name=\"status\"\n                            value={this.state.status}\n                            onChange ={this.onChange}>\n                                <option value=\"\">Select Status</option>\n                                <option value=\"TO_DO\">TO DO</option>\n                                <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                                <option value=\"DONE\">DONE</option>\n                            </select>\n                        </div>\n\n                        <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n\n        );\n    }\n}\n\nAddProjectTask.propTypes = {\n    addProjectTask: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n    errors: state.errors\n})\n\nexport default connect(mapStateToProps, {addProjectTask})(AddProjectTask);","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { Link } from \"react-router-dom\";\nimport { getProjectTask, updateProjectTask } from \"../../../actions/BacklogAction\"\nimport PropTypes from \"prop-types\";\n\nclass UpdateProjectTask extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      id: \"\",\n      projectSequence: \"\",\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: \"\",\n      dueDate: \"\",\n      projectIdentifier: \"\",\n      create_At: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const { backlog_id, pt_id } = this.props.match.params;\n    this.props.getProjectTask(backlog_id, pt_id, this.props.history);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n\n    const {\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier,\n      create_At\n    } = nextProps.project_task;\n\n    this.setState({\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier,\n      create_At\n    });\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const UpdateProjectTask = {\n      id: this.state.id,\n      projectSequence: this.state.projectSequence,\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate,\n      projectIdentifier: this.state.projectIdentifier,\n      create_At: this.state.create_At\n    };\n\n    // console.log(UpdateProjectTask);\n    this.props.updateProjectTask(\n      this.state.projectIdentifier,\n      this.state.projectSequence,\n      UpdateProjectTask,\n      this.props.history\n    );\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link\n                to={`/projectBoard/${this.state.projectIdentifier}`}\n                className=\"btn btn-light\"\n              >\n                Back to Project Board\n              </Link>\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\n              <p className=\"lead text-center\">\n                Project Name: {this.state.projectIdentifier} | Project Task ID:{\" \"}\n                {this.state.projectSequence}{\" \"}\n              </p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.summary\n                    })}\n                    name=\"summary\"\n                    placeholder=\"Project Task summary\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                  />\n                  {errors.summary && (\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateProjectTask.propTypes = {\n  getProjectTask: PropTypes.func.isRequired,\n  project_task: PropTypes.object.isRequired,\n  updateProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project_task: state.backlog.project_task,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { getProjectTask, updateProjectTask }\n)(UpdateProjectTask);","import React, { Component } from 'react'\nimport {Link} from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nclass Landing extends Component {\n\n    componentDidMount() {\n        if(this.props.security.validToken){\n            this.props.history.push(\"/dashboard\");\n        }\n    }\n    \n    render() {\n        return (\n            <div className=\"landing\">\n                <div className=\"light-overlay landing-inner text-dark\">\n                 <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12 text-center\">\n                        <h1 className=\"display-3 mb-4\">ProjectMilestone management Tool</h1>\n                        <p className=\"lead\">\n                                Create your account to join active projects or start you own\n                        </p>\n                        <hr />\n                        <Link className=\"btn btn-lg btn-primary mr-2\" to=\"/register\">\n                            Sign Up\n                        </Link>\n                        <Link to=\"/login\" className=\"btn btn-lg btn-secondary mr-2\">\n                                Login\n                        </Link>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n        )\n    }\n}\n\nLanding.propTypes = {\n    security: PropTypes.object.isRequired\n}\n\n// toget state from redux store\nconst mapStateToProps = state => ({\n    security: state.security\n})\n\nexport default connect(mapStateToProps) (Landing);","import React, { Component } from 'react';\nimport {createNewUser} from \"../../actions/SecurityAction\";\nimport PropTypes from \"prop-types\";\nimport {connect} from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass Register extends Component {\n    \n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            username: \"\",\n            fullName: \"\",\n            password: \"\",\n            confirmPassword: \"\",\n            errors: {}\n        }; \n    }\n\n    componentDidMount() {\n        if(this.props.security.validToken){\n            this.props.history.push(\"/dashboard\");\n        }\n    }\n    \n    onSubmit = (e) => {\n        e.preventDefault();\n        const newUser = {\n            username: this.state.username,\n            fullName: this.state.fullName,\n            password: this.state.password,\n            confirmPassword: this.state.confirmPassword,\n        }\n        console.log(newUser);\n\n        this.props.createNewUser(newUser, this.props.history);\n    }\n\n\n    componentWillReceiveProps(nextProps) {\n        if(nextProps.errors){\n            this.setState({ errors: nextProps.errors});\n        }\n    }\n\n    onChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    }\n\n    render() {\n\n        const {errors} = this.state;\n\n        return (\n            <div className=\"register\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-8 m-auto\">\n                        <h1 className=\"display-4 text-center\">Sign Up</h1>\n                        <p className=\"lead text-center\">Create your Account</p>\n                        <form action=\"create-profile.html\">\n                            <div className=\"form-group\">\n                                <input type=\"text\" \n                                className={classnames(\"form-control form-control-lg\",\n                                {\"is-invalid\":errors.fullName})} \n                                placeholder=\"Full Name\" \n                                name=\"fullName\"\n                                value={this.state.fullName} \n                                onChange={this.onChange}   \n                                />\n                            {\n                                errors.fullName &&(<div className=\"invalid-feedback\">{errors.fullName}</div>)\n                            }    \n                            </div>\n                            <div className=\"form-group\">\n                                <input type=\"text\" \n                                className={classnames(\"form-control form-control-lg\",\n                                {\"is-invalid\":errors.username})} \n                                placeholder=\"Email Address\" \n                                name=\"username\"\n                                value={this.state.username}  \n                                onChange={this.onChange}  \n                                 />\n                            {\n                                errors.username &&(<div className=\"invalid-feedback\">{errors.username}</div>)\n                            } \n                            </div>\n                            <div className=\"form-group\">\n                                <input type=\"password\" \n                                className={classnames(\"form-control form-control-lg\",\n                                {\"is-invalid\":errors.password})} \n                                placeholder=\"Password\" \n                                name=\"password\"\n                                value={this.state.password}  \n                                onChange={this.onChange}  \n                                 />\n                                {\n                                    errors.password &&(<div className=\"invalid-feedback\">{errors.password}</div>)\n                                } \n                            </div>\n                            <div className=\"form-group\">\n                                <input type=\"password\" \n                                className={classnames(\"form-control form-control-lg\",\n                                {\"is-invalid\":errors.confirmPassword})} \n                                placeholder=\"Confirm Password\"\n                                name=\"confirmPassword\"\n                                value={this.state.confirmPassword} \n                                onChange={this.onChange}   \n                                 />\n                                {\n                                    errors.confirmPassword &&(<div className=\"invalid-feedback\">{errors.confirmPassword}</div>)\n                                } \n                            </div>\n                            <input type=\"submit\" onClick={this.onSubmit} className=\"btn btn-info btn-block mt-4\" />\n                        </form>\n                    </div>\n                </div>\n            </div>\n    </div>\n        )\n    }\n}\n\nRegister.propTypes = {\n    createNewUser: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired,\n    security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n    errors: state.errors,\n    security: state.security\n})\n\nexport default connect(mapStateToProps, {createNewUser}) (Register);","import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport {connect} from \"react-redux\";\nimport {login} from \"../../actions/SecurityAction\"\nimport classnames from \"classnames\";\n \nclass Login extends Component {\n\n    constructor(props) {\n      super(props)\n    \n      this.state = {\n        username:\"\",\n        password:\"\",\n        errors:{}\n      };\n    }\n\n    componentDidMount() {\n        if(this.props.security.validToken){\n            this.props.history.push(\"/dashboard\");\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if(nextProps.security.validToken){\n            this.props.history.push(\"/dashboard\");\n        }\n\n        if(nextProps.errors){\n            this.setState({errors: nextProps.errors});\n        }\n    }\n    \n    onSubmit = (e) => {\n        e.preventDefault();\n        const LoginRequest = {\n        username:this.state.username,\n        password:this.state.password\n        }\n\n        this.props.login(LoginRequest);\n    }\n\n    onChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    render() {\n\n        const {errors} = this.state;\n\n        return (\n            <div className=\"login\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8 m-auto\">\n                            <h1 className=\"display-4 text-center\">Log In</h1>\n                            <form onSubmit={this.onSubmit}>\n                                <div className=\"form-group\">\n                                    <input type=\"text\" \n                                    className={classnames(\"form-control form-control-lg\",\n                                    {\"is-invalid\":errors.username})} \n                                    placeholder=\"Email Address\" \n                                    name=\"username\"\n                                    value={this.state.username}\n                                    onChange={this.onChange} />\n                                    {\n                                        errors.username &&(<div className=\"invalid-feedback\">{errors.username}</div>)\n                                    }\n\n                                </div>\n                                <div className=\"form-group\">\n                                    <input type=\"password\" \n                                    className={classnames(\"form-control form-control-lg\", \n                                    {\"is-invalid\":errors.password})} \n                                    placeholder=\"Password\" \n                                    name=\"password\"\n                                    value={this.state.password}\n                                    onChange={this.onChange} />\n                                    {\n                                        errors.password &&(<div className=\"invalid-feedback\">{errors.password}</div>)\n                                    }\n\n                                </div>\n                                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n                            </form>\n                        </div>\n                    </div>\n            </div>\n    </div>\n        );\n    }\n}\n\nLogin.propTypes = {\n    login: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired,\n    security: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n    security: state.security,\n    errors: state.errors\n})\n\nexport default connect(mapStateToProps, {login})(Login);","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\n//toredirect to login for every private routes\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\n  <Route\n    {...otherProps}\n    render={props =>\n      security.validToken === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\nSecuredRoute.propTypes = {\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security\n});\n\nexport default connect(mapStateToProps)(SecuredRoute);","import React from 'react';\nimport './App.css';\nimport Dashboard from './components/Dashboard'\nimport Header from './components/Layout/Header'\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport AddProject from './components/Project/AddProject';\nimport {Provider} from 'react-redux';\nimport store from './store'\nimport UpdateProject from './components/Project/UpdateProject';\nimport ProjectBoard from './components/ProjectBoard/ProjectBoard';\nimport AddProjectTask from './components/ProjectBoard/ProjectTasks/AddProjectTask';\nimport UpdateProjectTask from './components/ProjectBoard/ProjectTasks/UpdateProjectTask'\nimport Landing from './components/Layout/Landing';\nimport Register from './components/UserManagement/Register';\nimport Login from './components/UserManagement/Login';\nimport jwt_decode from 'jwt-decode';\nimport setJWTToken from \"./SecurityUtils/setJwtToken\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport {logout} from \"./actions/SecurityAction\";\nimport SecuredRoutes from \"./SecurityUtils/SecureRoutes\" \n\n\n// to avoid logging in for every reload page. the token is still in localstorage but not in the header as it has not extracted\nconst jwtToken = localStorage.jwtToken;\n\nif(jwtToken){\n  setJWTToken(jwtToken);\n  const decoded_jwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded_jwtToken\n  });\n\n  const currentTime = Date.now() / 1000;\n  if(decoded_jwtToken.exp < currentTime){\n    store.dispatch(logout());\n    window.location.href=\"/\"\n  }\n}\n\nfunction App() {\n  return (\n    <Provider store={store}>\n    <Router>\n    <div className=\"App\">\n    <Header/>\n    {\n      // public routes\n    }\n    <Route exact path=\"/\" component={Landing}/>\n    <Route exact path=\"/register\" component={Register}/>\n    <Route exact path=\"/login\" component={Login}/>\n\n    {\n      //Private routes\n    }\n\n    <Switch>\n      <SecuredRoutes exact path=\"/dashboard\" component={Dashboard}/>\n      <SecuredRoutes exact path=\"/addProject\" component={AddProject}/>\n      <SecuredRoutes exact path=\"/updateProject/:id\" component={UpdateProject}/>\n      <SecuredRoutes exact path=\"/projectBoard/:id\" component={ProjectBoard}/>\n      <SecuredRoutes exact path=\"/addProjectTask/:id\" component={AddProjectTask}/>\n      <SecuredRoutes exact path=\"/updateProjectTask/:backlog_id/:pt_id\" component={UpdateProjectTask}/>\n    </Switch>\n    </div>\n    </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}